log_level = 'info'
sweep_mode = true

[inputs]
n_workers = +1
n_threads = +6
device = 'cpu'
in_directory = './data/inputs/'
dataset = 'DC'
load_experiment = ''
[inputs.seed.sweep]
  default = 1
  range = "1:5:1"
  
[inputs.data]
    [inputs.data.origin_demand]
      file = 'origin_demand_sum_normalised.txt'
    [inputs.data.destination_attraction_ts]
      file ='destination_attraction_housing_units_ts_sum_normalised.txt'
    [inputs.data.cost_matrix]
      file = "cost_matrix_max_normalised.txt"
    [inputs.data.ground_truth_table]
      file = 'ground_truth_table.txt'
    [inputs.data.train_cells]
      file = 'zero_and_train_cells.txt'
    [inputs.data.test_cells]
        file = 'test_cells.txt'
    [inputs.data.validation_cells]
        file = 'validation_cells.txt'

[contingency_table]
  sparse_margins = false
  [contingency_table.constraints]
    coupled = true
    [contingency_table.constraints.axes.sweep]
      default = []
      range = [[[+0,+1]], [[+0],[+1]]]
      coupled = true
      target_name = 'title'
    

[spatial_interaction_model]
  grand_total = +200029
  [spatial_interaction_model.name.sweep]
      default = 'TotallyConstrained'
      range = ['TotallyConstrained', 'ProductionConstrained']
      coupled = true
      target_name = 'title'
  [spatial_interaction_model.parameters]
    bmax = +1.0
  
[harris_wilson_model]
  dt = +0.008164777
  [harris_wilson_model.parameters]
    noise_percentage = +2.069878483
    epsilon = 1.301050484
    delta = 0.0
    [harris_wilson_model.parameters.sigma.sweep]
      default = 0.0141421356
      range = [0.0141421356, 0.1414213562, nan]

[training]
  num_steps = +1
  batch_size = +1
  N = 100000
  intensity_model = 'spatial_interaction_model'
  physics_model = 'harris_wilson_model'
  [training.to_learn.sweep]
    default = ['alpha', 'beta'] 
    range = [['alpha', 'beta'],['alpha', 'beta'],['alpha', 'beta', 'sigma']]
    coupled = true
    target_name = 'sigma'

[hyperparameter_optimisation]
  n_trials = 100
  timeout = nan
  metric_minimise = true
  metric_evaluation = "MathUtils.srmse(prediction=prediction,ground_truth=ground_truth_table,mask=mask)"
  
[mcmc]
    disable_tqdm = true
    mcmc_workers = +1
    
    [mcmc.contingency_table]
      table_steps = +1
      margin0 = 'multinomial'
      [mcmc.contingency_table.table0.sweep]
        default = 'direct_sampling'
        range = ['direct_sampling', 'maximum_entropy_solution']
        coupled = true
        target_name = 'title'
      [mcmc.contingency_table.proposal.sweep]
        default = 'direct_sampling'
        range = ['direct_sampling', 'degree_higher']
        coupled = true
        target_name = 'title'

    [mcmc.parameters]
      theta_steps = 1
      step_size = 1.0
      [mcmc.parameters.covariance.sweep]
        default = [[0.0149674,0.00182529],[0.00182529,0.0109968]]
        range = [
          [[0.0149674,0.00182529],[0.00182529,0.0109968]],
          [[1.0,0.0],[0.0,1.0]],
          [[1.0,0.0],[0.0,1.0]]
        ]
        coupled = true
        target_name = 'sigma'
        
    [mcmc.destination_attraction]
      log_destination_attraction_steps = 1
      leapfrog_steps = 3#10
      leapfrog_step_size = 0.01 #0.02
      ais_leapfrog_steps = 3#10
      ais_leapfrog_step_size = 0.2#0.1
      ais_samples = 10
      n_bridging_distributions = 50

[neural_network]
  disable_tqdm = true
  [neural_network.loss]
    loss_name = ['dest_attraction_ts_likelihood_loss','table_likelihood_loss']
    loss_function = ['custom','custom']
    [neural_network.loss.loss_kwargs]
      noise_percentage = nan

    # [neural_network.loss.loss_name.sweep]
    #   default = ['table_likelihood_loss']
    #   range = [
    #     ['table_likelihood_loss'],
    #     ['dest_attraction_ts_likelihood_loss','table_likelihood_loss']
    #   ]
    # [neural_network.loss.loss_function.sweep]
    #   default = ['custom']
    #   range = [
    #     ['custom'],
    #     ['custom','custom']
    #   ]
    #   coupled = true
    #   target_name = 'loss_name'
    # [neural_network.loss.loss_kwargs.sweep]
    #   coupled = true
    #   target_name = 'loss_name'
    #   [neural_network.loss.loss_kwargs.sweep.default]
    #     nokey = nan
    #   [[neural_network.loss.loss_kwargs.sweep.range]]
    #     nokey = nan
    #   [[neural_network.loss.loss_kwargs.sweep.range]]
    #     noise_percentage = nan
  [neural_network.hyperparameters]
    num_hidden_layers = +1
    optimizer = 'Adam'
    learning_rate = +0.002
    [neural_network.hyperparameters.biases]
      default = [0.0,4.0]
      [neural_network.hyperparameters.biases.layer_specific]
    [neural_network.hyperparameters.nodes_per_layer]
      default = 20
      [neural_network.hyperparameters.nodes_per_layer.layer_specific]
    [neural_network.hyperparameters.activation_funcs]
      default = 'linear'
      [neural_network.hyperparameters.activation_funcs.layer_specific]
        1 = 'abs'

  # [neural_network.hyperparameters]
  #   num_hidden_layers = +5
  #   optimizer = 'Adam'
  #   learning_rate = +0.0000534563395155105
  #   [neural_network.hyperparameters.biases]
  #     default = 2.026003035
  #     [neural_network.hyperparameters.biases.layer_specific]
  #       0 = 2.026003035
  #       1 = 0.957112068
  #       2 = 1.487798921
  #       3 = 0.845822705
  #       4 = 3.910202558
  #   [neural_network.hyperparameters.nodes_per_layer]
  #     default = 17
  #     [neural_network.hyperparameters.nodes_per_layer.layer_specific]
  #       0 = 17
  #       1 = 25
  #       2 = 21
  #       3 = 13
  #       4 = 9
  #   [neural_network.hyperparameters.activation_funcs]
  #     default = 'hardsigmoid'
  #     [neural_network.hyperparameters.activation_funcs.layer_specific]
  #       0 = 'hardsigmoid'
  #       1 = 'relu'
  #       2 = 'hardsigmoid'
  #       3 = 'relu'
  #       4 = 'linear'
  #       5 = 'linear'

[[experiments]]
  type = 'JointTableSIM_NN'
  comment = 'Dependent Joint Table and Spatial Interaction Model parameter learning using Neural Networks'
  disable_tqdm = false
  export_samples = true
  export_metadata = true
  overwrite = true
  validate_samples = false

[[experiments]]
  type = 'JointTableSIM_MCMC'
  comment = 'Joint Table and Spatial Interaction Model parameter learning using Markov Chain Monte Carlo'
  disable_tqdm = false
  export_samples = true
  export_metadata = true
  overwrite = true
  validate_samples = false

[outputs]
    chunk_size = +20_000
    write_start = +1
    write_every = +1
    out_directory = './data/outputs/'
    out_group = 'exp1'
    [outputs.title.sweep]
      default = '_totally_and_cell_constrained'
      range = ['_totally_and_cell_constrained','_doubly_and_cell_constrained']