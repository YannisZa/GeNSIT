log_level = 'info'
sweep_mode = true

[inputs]
n_workers = +1
n_threads = +6
device = 'cpu'
in_directory = './data/inputs/'
dataset = 'DC'
load_experiment = ''
[inputs.seed.sweep]
  default = 1
  range = "1:10:1"

[inputs.data]
    [inputs.data.origin_demand]
      file = 'origin_demand_sum_normalised.txt'
    [inputs.data.destination_attraction_ts]
      file ='destination_attraction_housing_units_ts_sum_normalised.txt'
    [inputs.data.cost_matrix]
      file = "cost_matrix_max_normalised.txt"
    [inputs.data.ground_truth_table]
      file = 'ground_truth_table.txt'
    [inputs.data.train_cells]
      file = 'zero_and_train_cells.txt'
    [inputs.data.test_cells]
      file = 'test_cells.txt'
    [inputs.data.validation_cells]
      file = 'validation_cells.txt'

[contingency_table]
  disable_tqdm = true
  sparse_margins = false
  [contingency_table.constraints]
    cells = true
    axes = [[+0,+1]]#[[+0],[+1]]

[spatial_interaction_model]
  name = 'TotallyConstrained'#'ProductionConstrained'
  grand_total = +200029
  [spatial_interaction_model.parameters]
    bmax = +1.0
  
[harris_wilson_model]
  dt = +0.015440469
  [harris_wilson_model.parameters]
    noise_percentage = +0.890347176
    epsilon = 3.45350352
    delta = 0.0
    [harris_wilson_model.parameters.sigma.sweep]
      default = 0.0141421356
      range = [0.0141421356, 0.1414213562, nan]

[training]
  num_steps = +1
  batch_size = +1
  N = 100000
  intensity_model = 'spatial_interaction_model'
  physics_model = 'harris_wilson_model'
  [training.to_learn.sweep]
    default = ['alpha', 'beta'] 
    range = [['alpha', 'beta'],['alpha', 'beta'],['alpha', 'beta', 'sigma']]
    coupled = true
    target_name = 'sigma'

[hyperparameter_optimisation]
  n_trials = 100
  timeout = nan
  metric_minimise = true
  metric_evaluation = "MathUtils.srmse(prediction=prediction,ground_truth=ground_truth_table,mask=mask)"
  
[mcmc]
  [mcmc.contingency_table]
    table_steps = +1
    table0 = 'direct_sampling'#'maximum_entropy_solution'
    margin0 = 'multinomial'
    proposal = 'direct_sampling'#'degree_higher'

  [neural_network]
    disable_tqdm = true
    [neural_network.loss]
      loss_name = ['dest_attraction_ts_likelihood_loss']
      loss_function = ['custom']
      [neural_network.loss.loss_kwargs]
        nokey = nan
        noise_percentage = nan
    [neural_network.hyperparameters]
        num_hidden_layers = +1
        optimizer = 'Adam'
        learning_rate = +0.002
        [neural_network.hyperparameters.biases]
          default = [0.0,4.0]
          [neural_network.hyperparameters.biases.layer_specific]
        [neural_network.hyperparameters.nodes_per_layer]
          default = 20
          [neural_network.hyperparameters.nodes_per_layer.layer_specific]
        [neural_network.hyperparameters.activation_funcs]
          default = 'linear'
          [neural_network.hyperparameters.activation_funcs.layer_specific]
            1 = 'abs'
          
#   [neural_network.hyperparameters]
#     num_hidden_layers = +6
#     optimizer = 'Adam'
#     learning_rate = +0.0000100634687944183
#     [neural_network.hyperparameters.biases]
#       default = 3.689425028
#       [neural_network.hyperparameters.biases.layer_specific]
#         0 = 3.689425028
#         1 = 3.776366647
#         2 = 2.747179613	
#         3 = 1.738523277
#         4 = 0.00225649
#         5 = 3.074207642
#     [neural_network.hyperparameters.nodes_per_layer]
#       default = +21
#       [neural_network.hyperparameters.nodes_per_layer.layer_specific]
#         0 = 21
#         1 = 1
#         2 = 29
#         3 = 1
#         4 = 29
#         5 = 1
#     [neural_network.hyperparameters.activation_funcs]
#       default = 'linear'
#       [neural_network.hyperparameters.activation_funcs.layer_specific]
#         0 = 'linear'
#         1 = 'abs'
#         2 = 'tanh'
#         3 = 'linear'
#         4 = 'tanh'
#         5 = 'abs'
#         6 = 'tanh'

[[experiments]]
  type = 'SIM_NN'
  comment = 'Spatial Interaction Model parameter learning using Neural Networks'
  disable_tqdm = false
  export_samples = true
  export_metadata = true
  overwrite = true
  validate_samples = false

[[experiments]]
  type = 'NonJointTableSIM_NN'
  comment = 'Independent Joint Table and Spatial Interaction Model parameter learning using Neural Networks'
  disable_tqdm = false
  export_samples = true
  export_metadata = true
  overwrite = true
  validate_samples = false


[outputs]
    chunk_size = +20_000
    write_start = +1
    write_every = +1
    out_directory = './data/outputs/'
    out_group = 'exp1'
    title = '_totally_and_cell_constrained'#'_doubly_and_cell_constrained'