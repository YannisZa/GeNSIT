log_level = 'info'
sweep_mode = false

[inputs]
n_workers = +1
n_threads = [+6,+6]
device = 'cpu'
dataset = './data/inputs/synthetic_2x3_N_100/'
load_experiment = ''
to_learn = ['alpha', 'beta', 'kappa']
seed = 1
# [inputs.seed.sweep]
#   default = 1
#   range = "1:10:1"
[inputs.dims]
  origin = +69
  destination = +13

[inputs.data_files]
    origin_demand = 'rowsums.txt'
    destination_attraction_ts='destination_attraction_time_series.txt'
    ground_truth_table = 'table_lsoas_to_msoas.txt'
    cost_matrix = """cost_matrices/clustered_facilities_sample_20x20_20_01_2023_\
    sample_20x20_clustered_facilities_ripleys_k_500_euclidean_points%_\
    prob_origin_destination_adjusted_normalised_boundary_only_\
    edge_corrected_cost_matrix_max_normalised.txt"""

[spatial_interaction_model]
  # sim_type = 'ProductionConstrained','TotallyConstrained'
  sim_type = 'TotallyConstrained'
  grand_total = +1 #+33704
  [spatial_interaction_model.parameters]
    bmax = +1.0
    # alpha = 1.0
    # beta = 0.0
  
[harris_wilson_model]
  dt = +0.001
  [harris_wilson_model.parameters]
    sigma = 0.0141421356 # 0.0141421356, 0.1414213562
    epsilon = 1.0
    # kappa = 0
    # delta = 0
    # [harris_wilson_model.parameters.sigma.sweep]
      # default = 0.0141421356
      # range = [0.0141421356,0.141421356]

[training]
  table_inference = false
  num_steps = +1
  batch_size = +1
  N = +100
  # [training.N.sweep]
  #   default = 100
  #   range = [100,1000,10000]

[neural_network]
  disable_tqdm = true
  [neural_network.loss_function] 
    name = 'mseloss'
  [neural_network.hyperparameters]
    num_layers = +1
    optimizer = 'Adam'
    learning_rate = +0.002
    [neural_network.hyperparameters.biases]
      default = [+0.0, +4.0]
      [neural_network.hyperparameters.biases.layer_specific]
    [neural_network.hyperparameters.nodes_per_layer]
      default = +20
      [neural_network.hyperparameters.nodes_per_layer.layer_specific]
    [neural_network.hyperparameters.activation_funcs]
      default = 'linear'
      [neural_network.hyperparameters.activation_funcs.layer_specific]
        1 = 'abs'

[[experiments]]
  type = 'SIM_NN'
  comment = 'Spatial interaction model parameter learning using neural networks'
  disable_tqdm = false
  print_statements = true
  export_samples = true
  export_metadata = true
  overwrite = true

[outputs]
    write_start = +1
    write_every = +1
    directory = './data/outputs/'
    experiment_title = ''